[
  {
    "id": 1,
    "name": "Roommate Finder",
    "image": "https://i.ibb.co/C3QnCpq4/finder.png",
    "tech": ["React", "TailwindCSS", "Firebase", "Express", "MongoDB"],
    "description": "Roommate Finder is a modern web application designed to simplify the process of finding roommates. It offers a seamless user experience with features like user authentication (via email/password or Google), the ability to post and manage roommate listings, and browse listings in a structured format. Authenticated users can like listings to reveal contact information and manage their own posts through a dedicated dashboard. The app includes a dynamic home page, protected routes, and a responsive UI powered by React.js, Tailwind CSS, and Firebase Auth. It also uses Express.js and MongoDB on the backend to ensure secure and efficient data handling.",
    "live": "https://roommate-finders.web.app/",
    "github": "https://github.com/jahidhasansabbir/roommate-finder-client",
    "challenges": "Encountered difficulties in setting up secure CRUD operations for listings, particularly ensuring that only the owner can update or delete their posts.",
    "future": "Add blog support, and full dark/light toggle."
  },
  {
    "id": 2,
    "name": "Share Bite",
    "image": "https://i.ibb.co/4cndPZ3/share.png",
    "tech": ["React", "Firebase", "Express", "MongoDB", "JWT"],
    "description": "Share Bitez is a full-stack web application built to reduce food waste by connecting individuals with surplus food to those in need. It features user authentication via Firebase (email/password and Google), and enables users to add, request, and manage food listings with a clean, responsive UI. The platform includes protected routes, JWT-based API security, and dynamic features like layout toggles, animated sections using Framer Motion, and interactive alerts with SweetAlert. Built using React, Tailwind CSS, Node.js, Express, MongoDB, and React Query, Share Bitez offers a seamless experience for users while promoting community-driven food sharing.",
    "live": "https://share-bitez.web.app/",
    "github": "https://github.com/jahidhasansabbir/share-bitez-client",
    "challenges": "Faced difficulties implementing secure JWT authentication, particularly with reliable token storage, managing token expiration, and enforcing protected route access control.",
    "future": "Add admin dashboard, theme control."
  },
  {
    "id": 3,
    "name": "App Store",
    "image": "https://i.ibb.co/8nW62Hhw/app.png",
    "tech": ["React", "TailwindCSS", "Firebase"],
    "description": "AppStore is a fully responsive and dynamic single-page web application that allows users to discover, install, and review apps across various categories such as Education, Productivity, and Health. It features secure authentication using Firebase with email/password and Google login, ensuring personalized access and protected routes for sensitive pages like app details, user profiles, and notifications. Users can browse trending apps based on ratings, toggle install/uninstall options, and submit real-time reviews and ratings only if they have installed the app. The platform offers an engaging and seamless user experience with responsive image sliders, dynamic navigation, editable user profiles, notification pages, and polished feedback through toast notifications and modal alerts. The app handles errors gracefully with a custom 404 page and dynamically updates page titles based on navigation. Built with React, React Router, Tailwind CSS, and DaisyUI, and powered by Firebase Authentication, this project combines modern web technologies to deliver a professional and user-centric app discovery platform.",
    "live": "https://appstore-1529c.web.app/",
    "github": "https://github.com/jahidhasansabbir/app-store",
    "challenges": "Facing difficulties in implementing Firebase authentication smoothly, including handling persistent login states, integrating Google OAuth, and securing protected routes.",
    "future": "Develop a robust backend to support persistent app data, user activity logs, enhanced review moderation, and implement scalable APIs for better performance and security."

  }
]
